@using FurnitureAssemblyContracts.ViewModels

@{
    ViewData["Title"] = "График продаж за предыдущий день";
}

<div class="text-center">
    @{
        <h3 class="display-4">График продаж за предыдущий день</h3>
            
        <div id="chartdiv" style="height: 700px;">
        </div>
    }
</div>

@section Scripts {
    <script>
        $.ajax({
            method: "GET",
            url: "/Home/GetGraphicOrdersByPreviousDay",
            success: function (result) {

                var data = [];

                result.forEach((el) => {
                    data.push({year: el.item1, europe: el.item2});
                });

                // Create root element
                // https://www.amcharts.com/docs/v5/getting-started/#Root_element
                var root = am5.Root.new("chartdiv");


                // Set themes
                // https://www.amcharts.com/docs/v5/concepts/themes/
                root.setThemes([
                    am5themes_Animated.new(root)
                ]);


                // Create chart
                // https://www.amcharts.com/docs/v5/charts/xy-chart/
                var chart = root.container.children.push(am5xy.XYChart.new(root, {
                    panX: false,
                    panY: false,
                    wheelX: "panX",
                    wheelY: "zoomX",
                    layout: root.verticalLayout
                }));


                // Add legend
                // https://www.amcharts.com/docs/v5/charts/xy-chart/legend-xy-series/
                var legend = chart.children.push(
                    am5.Legend.new(root, {
                        centerX: am5.p50,
                        x: am5.p50
                    })
                );

                // Create axes
                // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/
                var xAxis = chart.xAxes.push(am5xy.CategoryAxis.new(root, {
                    categoryField: "year",
                    renderer: am5xy.AxisRendererX.new(root, {
                        cellStartLocation: 0.1,
                        cellEndLocation: 0.9
                    }),
                    tooltip: am5.Tooltip.new(root, {})
                }));

                xAxis.data.setAll(data);

                var yAxis = chart.yAxes.push(am5xy.ValueAxis.new(root, {
                    renderer: am5xy.AxisRendererY.new(root, {})
                }));


                // Add series
                // https://www.amcharts.com/docs/v5/charts/xy-chart/series/
                function makeSeries(name, fieldName) {
                    var series = chart.series.push(am5xy.ColumnSeries.new(root, {
                        name: name,
                        xAxis: xAxis,
                        yAxis: yAxis,
                        valueYField: fieldName,
                        categoryXField: "year",
                        stacked: true
                    }));

                    series.events.on("datavalidated", function () {
                        yAxis.setAll({
                            min: yAxis.getPrivate("min"),
                            max: yAxis.getPrivate("max"),
                            start: 0,
                            end: 1
                        });
                    });

                    series.data.setAll(data);
                    series.appear();
                }

                makeSeries("Europe", "europe");

                chart.set("scrollbarX", am5.Scrollbar.new(root, {
                    orientation: "horizontal"
                }));


                // Make stuff animate on load
                // https://www.amcharts.com/docs/v5/concepts/animations/
                chart.appear(1000, 100);
            }
        });
    </script>
}